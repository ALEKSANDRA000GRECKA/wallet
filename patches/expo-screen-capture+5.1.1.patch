diff --git a/node_modules/expo-screen-capture/android/src/main/java/expo/modules/screencapture/ScreenShotEventEmitter.kt b/node_modules/expo-screen-capture/android/src/main/java/expo/modules/screencapture/ScreenShotEventEmitter.kt
index 2c6a4ad..aa58654 100644
--- a/node_modules/expo-screen-capture/android/src/main/java/expo/modules/screencapture/ScreenShotEventEmitter.kt
+++ b/node_modules/expo-screen-capture/android/src/main/java/expo/modules/screencapture/ScreenShotEventEmitter.kt
@@ -33,6 +33,7 @@ class ScreenshotEventEmitter(val context: Context, moduleRegistry: ModuleRegistr
     val contentObserver: ContentObserver = object : ContentObserver(Handler()) {
       override fun onChange(selfChange: Boolean, uri: Uri?) {
         super.onChange(selfChange, uri)
+        Log.d("expo-screen-capture", "Changed" + uri.toString())
         if (isListening) {
           if (!hasReadExternalStoragePermission(context)) {
             Log.e("expo-screen-capture", "Could not listen for screenshots, do not have READ_EXTERNAL_STORAGE permission.")
@@ -62,6 +63,9 @@ class ScreenshotEventEmitter(val context: Context, moduleRegistry: ModuleRegistr
   }
 
   private fun hasReadExternalStoragePermission(context: Context): Boolean {
+    if (android.os.Build.VERSION.SDK_INT > android.os.Build.VERSION_CODES.Q) {
+      return ContextCompat.checkSelfPermission(context, permission.READ_MEDIA_IMAGES) == PackageManager.PERMISSION_GRANTED
+    }
     return ContextCompat.checkSelfPermission(context, permission.READ_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED
   }
 
